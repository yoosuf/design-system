@use "sass:map";
@use "../primitives/colors.scss" as *;

$semantic-colors: (
  text: (
    strong: map.get(map.get($colors, grey), 1000),
    weak: map.get(map.get($colors, grey), 700),
    brand: map.get(map.get($colors, brand), 1000),
    disabled: map.get(map.get($colors, grey), 100),
    error: map.get(map.get($colors, red), 1000),
    warning: map.get(map.get($colors, amber), 1000),
    success: map.get(map.get($colors, green), 1000),
    information: map.get(map.get($colors, teal), 1000),
    inverse: (
      strong: var(--text-inverse-strong),
      weak: var(--text-inverse-weak),
      disabled: var(--text-inverse-disabled),
    ),
  ),
  stroke: (
    strong: map.get(map.get($colors, grey), 500),
    weak: map.get(map.get($colors, grey), 100),
    selected: map.get(map.get($colors, brand), 1000),
    focus: map.get(map.get($colors, grey), 500),
    disabled: map.get(map.get($colors, grey), 100),
    brand: (
      strong: map.get(map.get($colors, brand), 800),
      weak: map.get(map.get($colors, brand), 200),
    ),
    error: (
      strong: map.get(map.get($colors, red), 800),
      weak: map.get(map.get($colors, red), 200),
    ),
    warning: (
      strong: map.get(map.get($colors, amber), 800),
      weak: map.get(map.get($colors, amber), 200),
    ),
    success: (
      strong: map.get(map.get($colors, green), 800),
      weak: map.get(map.get($colors, green), 200),
    ),
    information: (
      strong: map.get(map.get($colors, teal), 800),
      weak: map.get(map.get($colors, teal), 200),
    ),
    inverse: (
      strong: var(--stroke-inverse-strong),
      weak: var(--stroke-inverse-weak),
      disabled: var(--stroke-inverse-disabled),
    ),
  ),
  icon: (
    neutral: map.get(map.get($colors, grey), 500),
    brand: map.get(map.get($colors, brand), 800),
    disabled: map.get(map.get($colors, grey), 100),
    error: map.get(map.get($colors, red), 800),
    warning: map.get(map.get($colors, amber), 800),
    success: map.get(map.get($colors, green), 800),
    information: map.get(map.get($colors, teal), 800),
    inverse: (
      strong: var(--icon-inverse-strong),
      weak: var(--icon-inverse-weak),
    ),
  ),
  fill: (
    strong: map.get(map.get($colors, grey), 1000),
    weak: map.get(map.get($colors, grey), 50),
    weaker: map.get(map.get($colors, grey), 25),
    hover: map.get(map.get($colors, grey), 50),
    press: map.get(map.get($colors, grey), 100),
    selected: map.get(map.get($colors, brand), 1000),
    disabled: map.get(map.get($colors, grey), 100),
    overlay: map.get(map.get($colors, grey), 500),
    brand: (
      strong: map.get(map.get($colors, brand), 1000),
      weak: map.get(map.get($colors, brand), 50),
    ),
    error: (
      strong: map.get(map.get($colors, red), 1000),
      weak: map.get(map.get($colors, red), 50),
    ),
    warning: (
      strong: map.get(map.get($colors, amber), 1000),
      weak: map.get(map.get($colors, amber), 50),
    ),
    success: (
      strong: map.get(map.get($colors, green), 1000),
      weak: map.get(map.get($colors, green), 50),
    ),
    information: (
      strong: map.get(map.get($colors, teal), 1000),
      weak: map.get(map.get($colors, teal), 50),
    ),
    inverse: (
      strong: var(--inverse-strong),
      weak: var(--inverse-weak),
      hover: var(--inverse-hover),
      press: var(--inverse-press),
      disabled: var(--inverse-disabled),
    ),
    white: map.get(map.get($colors, grey), solid, 0),
    yellow: map.get(map.get($colors, yellow), solid, 1000),
  ),
  background: (
    base: var(--background-base),
    raised: var(--background-raised),
    overlay: var(--background-overlay),
    sunken: var(--background-sunken),
    alternate: var(--background-alternate),
    brand: var(--background-brand),
    inverse: var(--background-inverse),
  ),
);

@function semantic-color($category, $shade...) {
  $value: map.get($semantic-colors, $category);
  @each $level in $shade {
    $value: map.get($value, $level);
  }
  @if $value {
    @return $value;
  } @else {
    @error "Semantic color `#{$category}-#{$shade}` not found!";
  }
}
